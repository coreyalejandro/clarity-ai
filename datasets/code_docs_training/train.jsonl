{"text": "Here's how to create a Python function with proper documentation:\n\n```python\ndef calculate_area(radius):\n    \"\"\"\n    Calculate the area of a circle given its radius.\n    \n    Args:\n        radius (float): The radius of the circle\n        \n    Returns:\n        float: The area of the circle\n        \n    Example:\n        >>> calculate_area(5)\n        78.54\n    \"\"\"\n    import math\n    return math.pi * radius ** 2\n```\n\nThis function includes a docstring explaining the purpose, parameters, return value, and provides a usage example."}
{"text": "Best practices for API endpoint documentation:\n\n```python\n@app.route('/users/<int:user_id>', methods=['GET'])\ndef get_user(user_id):\n    \"\"\"\n    Retrieve user information by ID.\n    \n    Args:\n        user_id (int): The unique identifier for the user\n        \n    Returns:\n        JSON response with user data:\n        {\n            \"id\": 123,\n            \"name\": \"John Doe\",\n            \"email\": \"john@example.com\"\n        }\n        \n    Status Codes:\n        200: Success\n        404: User not found\n        400: Invalid user ID\n    \"\"\"\n    # Implementation here\n```\n\nAlways document parameters, return values, and possible status codes."}
{"text": "How to write clear code comments:\n\n```python\n# Calculate compound interest using the formula A = P(1 + r/n)^(nt)\ndef compound_interest(principal, rate, times_compounded, years):\n    # Convert percentage to decimal (e.g., 5% = 0.05)\n    rate_decimal = rate / 100\n    \n    # Apply the compound interest formula\n    amount = principal * (1 + rate_decimal / times_compounded) ** (times_compounded * years)\n    \n    # Return the final amount minus the principal to get interest earned\n    return amount - principal\n```\n\nGood comments explain the 'why' behind the code, not just the 'what'."}
